starting build

**********************************************************************

Test build
build xv6 using make

**********************************************************************
Trying to clean project using make clean
make clean
Makefile:149: kernel/bio.d: No such file or directory
Makefile:149: kernel/console.d: No such file or directory
Makefile:149: kernel/exec.d: No such file or directory
Makefile:149: kernel/file.d: No such file or directory
Makefile:149: kernel/fs.d: No such file or directory
Makefile:149: kernel/ide.d: No such file or directory
Makefile:149: kernel/ioapic.d: No such file or directory
Makefile:149: kernel/kalloc.d: No such file or directory
Makefile:149: kernel/kbd.d: No such file or directory
Makefile:149: kernel/lapic.d: No such file or directory
Makefile:149: kernel/main.d: No such file or directory
Makefile:149: kernel/mp.d: No such file or directory
Makefile:149: kernel/picirq.d: No such file or directory
Makefile:149: kernel/pipe.d: No such file or directory
Makefile:149: kernel/proc.d: No such file or directory
Makefile:149: kernel/spinlock.d: No such file or directory
Makefile:149: kernel/string.d: No such file or directory
Makefile:149: kernel/swtch.d: No such file or directory
Makefile:149: kernel/syscall.d: No such file or directory
Makefile:149: kernel/sysfile.d: No such file or directory
Makefile:149: kernel/sysproc.d: No such file or directory
Makefile:149: kernel/timer.d: No such file or directory
Makefile:149: kernel/trapasm.d: No such file or directory
Makefile:149: kernel/trap.d: No such file or directory
Makefile:149: kernel/uart.d: No such file or directory
Makefile:149: kernel/vectors.d: No such file or directory
Makefile:149: kernel/vm.d: No such file or directory
Makefile:149: kernel/bootmain.d: No such file or directory
Makefile:149: kernel/bootasm.d: No such file or directory
Makefile:149: kernel/multiboot.d: No such file or directory
Makefile:149: kernel/data.d: No such file or directory
Makefile:149: kernel/bootother.d: No such file or directory
Makefile:149: kernel/initcode.d: No such file or directory
Makefile:149: user/cat.d: No such file or directory
Makefile:149: user/echo.d: No such file or directory
Makefile:149: user/forktest.d: No such file or directory
Makefile:149: user/grep.d: No such file or directory
Makefile:149: user/heap.d: No such file or directory
Makefile:149: user/init.d: No such file or directory
Makefile:149: user/kill.d: No such file or directory
Makefile:149: user/ln.d: No such file or directory
Makefile:149: user/ls.d: No such file or directory
Makefile:149: user/mkdir.d: No such file or directory
Makefile:149: user/null.d: No such file or directory
Makefile:149: user/ovf.d: No such file or directory
Makefile:149: user/p3.d: No such file or directory
Makefile:149: user/rm.d: No such file or directory
Makefile:149: user/sh.d: No such file or directory
Makefile:149: user/spin.d: No such file or directory
Makefile:149: user/stack2.d: No such file or directory
Makefile:149: user/stressfs.d: No such file or directory
Makefile:149: user/tester.d: No such file or directory
Makefile:149: user/usertests.d: No such file or directory
Makefile:149: user/wc.d: No such file or directory
Makefile:149: user/zombie.d: No such file or directory
Makefile:149: user/ulib.d: No such file or directory
Makefile:149: user/usys.d: No such file or directory
Makefile:149: user/printf.d: No such file or directory
Makefile:149: user/umalloc.d: No such file or directory
Makefile:149: tools/mkfs.d: No such file or directory
gcc  -iquote include -Wall -Werror -ggdb  \
  -M -MG tools/mkfs.c -MF tools/mkfs.d -MT tools/mkfs.d -MT tools/mkfs.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/umalloc.c -MF user/umalloc.d -MT user/umalloc.d -MT user/umalloc.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/printf.c -MF user/printf.d -MT user/printf.d -MT user/printf.o -g
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/usys.S -MF user/usys.d -MT user/usys.d -MT user/usys.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ulib.c -MF user/ulib.d -MT user/ulib.d -MT user/ulib.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/zombie.c -MF user/zombie.d -MT user/zombie.d -MT user/zombie.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/wc.c -MF user/wc.d -MT user/wc.d -MT user/wc.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/usertests.c -MF user/usertests.d -MT user/usertests.d -MT user/usertests.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/stressfs.c -MF user/stressfs.d -MT user/stressfs.d -MT user/stressfs.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/stack2.c -MF user/stack2.d -MT user/stack2.d -MT user/stack2.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/spin.c -MF user/spin.d -MT user/spin.d -MT user/spin.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/sh.c -MF user/sh.d -MT user/sh.d -MT user/sh.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/rm.c -MF user/rm.d -MT user/rm.d -MT user/rm.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/p3.c -MF user/p3.d -MT user/p3.d -MT user/p3.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ovf.c -MF user/ovf.d -MT user/ovf.d -MT user/ovf.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/null.c -MF user/null.d -MT user/null.d -MT user/null.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/mkdir.c -MF user/mkdir.d -MT user/mkdir.d -MT user/mkdir.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ls.c -MF user/ls.d -MT user/ls.d -MT user/ls.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ln.c -MF user/ln.d -MT user/ln.d -MT user/ln.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/kill.c -MF user/kill.d -MT user/kill.d -MT user/kill.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/init.c -MF user/init.d -MT user/init.d -MT user/init.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/heap.c -MF user/heap.d -MT user/heap.d -MT user/heap.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/grep.c -MF user/grep.d -MT user/grep.d -MT user/grep.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/forktest.c -MF user/forktest.d -MT user/forktest.d -MT user/forktest.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/echo.c -MF user/echo.d -MT user/echo.d -MT user/echo.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/cat.c -MF user/cat.d -MT user/cat.d -MT user/cat.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/initcode.S -MF kernel/initcode.d -MT kernel/initcode.d -MT kernel/initcode.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bootother.S -MF kernel/bootother.d -MT kernel/bootother.d -MT kernel/bootother.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/data.S -MF kernel/data.d -MT kernel/data.d -MT kernel/data.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/multiboot.S -MF kernel/multiboot.d -MT kernel/multiboot.d -MT kernel/multiboot.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bootasm.S -MF kernel/bootasm.d -MT kernel/bootasm.d -MT kernel/bootasm.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bootmain.c -MF kernel/bootmain.d -MT kernel/bootmain.d -MT kernel/bootmain.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/vm.c -MF kernel/vm.d -MT kernel/vm.d -MT kernel/vm.o
perl kernel/vectors.pl > kernel/vectors.S
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/vectors.S -MF kernel/vectors.d -MT kernel/vectors.d -MT kernel/vectors.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/uart.c -MF kernel/uart.d -MT kernel/uart.d -MT kernel/uart.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/trap.c -MF kernel/trap.d -MT kernel/trap.d -MT kernel/trap.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/trapasm.S -MF kernel/trapasm.d -MT kernel/trapasm.d -MT kernel/trapasm.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/timer.c -MF kernel/timer.d -MT kernel/timer.d -MT kernel/timer.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/sysproc.c -MF kernel/sysproc.d -MT kernel/sysproc.d -MT kernel/sysproc.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/sysfile.c -MF kernel/sysfile.d -MT kernel/sysfile.d -MT kernel/sysfile.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/syscall.c -MF kernel/syscall.d -MT kernel/syscall.d -MT kernel/syscall.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/swtch.S -MF kernel/swtch.d -MT kernel/swtch.d -MT kernel/swtch.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/string.c -MF kernel/string.d -MT kernel/string.d -MT kernel/string.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/spinlock.c -MF kernel/spinlock.d -MT kernel/spinlock.d -MT kernel/spinlock.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/proc.c -MF kernel/proc.d -MT kernel/proc.d -MT kernel/proc.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/pipe.c -MF kernel/pipe.d -MT kernel/pipe.d -MT kernel/pipe.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/picirq.c -MF kernel/picirq.d -MT kernel/picirq.d -MT kernel/picirq.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/mp.c -MF kernel/mp.d -MT kernel/mp.d -MT kernel/mp.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/main.c -MF kernel/main.d -MT kernel/main.d -MT kernel/main.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/lapic.c -MF kernel/lapic.d -MT kernel/lapic.d -MT kernel/lapic.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/kbd.c -MF kernel/kbd.d -MT kernel/kbd.d -MT kernel/kbd.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/kalloc.c -MF kernel/kalloc.d -MT kernel/kalloc.d -MT kernel/kalloc.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/ioapic.c -MF kernel/ioapic.d -MT kernel/ioapic.d -MT kernel/ioapic.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/ide.c -MF kernel/ide.d -MT kernel/ide.d -MT kernel/ide.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/fs.c -MF kernel/fs.d -MT kernel/fs.d -MT kernel/fs.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/file.c -MF kernel/file.d -MT kernel/file.d -MT kernel/file.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/exec.c -MF kernel/exec.d -MT kernel/exec.d -MT kernel/exec.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/console.c -MF kernel/console.d -MT kernel/console.d -MT kernel/console.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bio.c -MF kernel/bio.d -MT kernel/bio.d -MT kernel/bio.o
rm -rf kernel/bio.o kernel/console.o kernel/exec.o kernel/file.o kernel/fs.o kernel/ide.o kernel/ioapic.o kernel/kalloc.o kernel/kbd.o kernel/lapic.o kernel/main.o kernel/mp.o kernel/picirq.o kernel/pipe.o kernel/proc.o kernel/spinlock.o kernel/string.o kernel/swtch.o kernel/syscall.o kernel/sysfile.o kernel/sysproc.o kernel/timer.o kernel/trapasm.o kernel/trap.o kernel/uart.o kernel/vectors.o kernel/vm.o kernel/bootmain.o kernel/bootasm.o kernel/multiboot.o kernel/data.o kernel/bootother.o kernel/initcode.o kernel/bio.d kernel/console.d kernel/exec.d kernel/file.d kernel/fs.d kernel/ide.d kernel/ioapic.d kernel/kalloc.d kernel/kbd.d kernel/lapic.d kernel/main.d kernel/mp.d kernel/picirq.d kernel/pipe.d kernel/proc.d kernel/spinlock.d kernel/string.d kernel/swtch.d kernel/syscall.d kernel/sysfile.d kernel/sysproc.d kernel/timer.d kernel/trapasm.d kernel/trap.d kernel/uart.d kernel/vectors.d kernel/vm.d kernel/bootmain.d kernel/bootasm.d kernel/multiboot.d kernel/data.d kernel/bootother.d kernel/initcode.d kernel/vectors.S kernel/bootblock kernel/bootblock.out kernel/bootother.out kernel/initcode.out kernel/kernel bootother initcode xv6.img user/bin user/cat user/echo user/forktest user/grep user/heap user/init user/kill user/ln user/ls user/mkdir user/null user/ovf user/p3 user/rm user/sh user/spin user/stack2 user/stressfs user/tester user/usertests user/wc user/zombie user/cat.o user/echo.o user/forktest.o user/grep.o user/heap.o user/init.o user/kill.o user/ln.o user/ls.o user/mkdir.o user/null.o user/ovf.o user/p3.o user/rm.o user/sh.o user/spin.o user/stack2.o user/stressfs.o user/tester.o user/usertests.o user/wc.o user/zombie.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/cat.d user/echo.d user/forktest.d user/grep.d user/heap.d user/init.d user/kill.d user/ln.d user/ls.d user/mkdir.d user/null.d user/ovf.d user/p3.d user/rm.d user/sh.d user/spin.d user/stack2.d user/stressfs.d user/tester.d user/usertests.d user/wc.d user/zombie.d user/ulib.d user/usys.d user/printf.d user/umalloc.d tools/mkfs tools/mkfs.o tools/mkfs.d fs fs.img .gdbinit .bochsrc dist
Trying to build project using make
make
Makefile:149: kernel/bio.d: No such file or directory
Makefile:149: kernel/console.d: No such file or directory
Makefile:149: kernel/exec.d: No such file or directory
Makefile:149: kernel/file.d: No such file or directory
Makefile:149: kernel/fs.d: No such file or directory
Makefile:149: kernel/ide.d: No such file or directory
Makefile:149: kernel/ioapic.d: No such file or directory
Makefile:149: kernel/kalloc.d: No such file or directory
Makefile:149: kernel/kbd.d: No such file or directory
Makefile:149: kernel/lapic.d: No such file or directory
Makefile:149: kernel/main.d: No such file or directory
Makefile:149: kernel/mp.d: No such file or directory
Makefile:149: kernel/picirq.d: No such file or directory
Makefile:149: kernel/pipe.d: No such file or directory
Makefile:149: kernel/proc.d: No such file or directory
Makefile:149: kernel/spinlock.d: No such file or directory
Makefile:149: kernel/string.d: No such file or directory
Makefile:149: kernel/swtch.d: No such file or directory
Makefile:149: kernel/syscall.d: No such file or directory
Makefile:149: kernel/sysfile.d: No such file or directory
Makefile:149: kernel/sysproc.d: No such file or directory
Makefile:149: kernel/timer.d: No such file or directory
Makefile:149: kernel/trapasm.d: No such file or directory
Makefile:149: kernel/trap.d: No such file or directory
Makefile:149: kernel/uart.d: No such file or directory
Makefile:149: kernel/vectors.d: No such file or directory
Makefile:149: kernel/vm.d: No such file or directory
Makefile:149: kernel/bootmain.d: No such file or directory
Makefile:149: kernel/bootasm.d: No such file or directory
Makefile:149: kernel/multiboot.d: No such file or directory
Makefile:149: kernel/data.d: No such file or directory
Makefile:149: kernel/bootother.d: No such file or directory
Makefile:149: kernel/initcode.d: No such file or directory
Makefile:149: user/cat.d: No such file or directory
Makefile:149: user/echo.d: No such file or directory
Makefile:149: user/forktest.d: No such file or directory
Makefile:149: user/grep.d: No such file or directory
Makefile:149: user/heap.d: No such file or directory
Makefile:149: user/init.d: No such file or directory
Makefile:149: user/kill.d: No such file or directory
Makefile:149: user/ln.d: No such file or directory
Makefile:149: user/ls.d: No such file or directory
Makefile:149: user/mkdir.d: No such file or directory
Makefile:149: user/null.d: No such file or directory
Makefile:149: user/ovf.d: No such file or directory
Makefile:149: user/p3.d: No such file or directory
Makefile:149: user/rm.d: No such file or directory
Makefile:149: user/sh.d: No such file or directory
Makefile:149: user/spin.d: No such file or directory
Makefile:149: user/stack2.d: No such file or directory
Makefile:149: user/stressfs.d: No such file or directory
Makefile:149: user/tester.d: No such file or directory
Makefile:149: user/usertests.d: No such file or directory
Makefile:149: user/wc.d: No such file or directory
Makefile:149: user/zombie.d: No such file or directory
Makefile:149: user/ulib.d: No such file or directory
Makefile:149: user/usys.d: No such file or directory
Makefile:149: user/printf.d: No such file or directory
Makefile:149: user/umalloc.d: No such file or directory
Makefile:149: tools/mkfs.d: No such file or directory
gcc  -iquote include -Wall -Werror -ggdb  \
  -M -MG tools/mkfs.c -MF tools/mkfs.d -MT tools/mkfs.d -MT tools/mkfs.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/umalloc.c -MF user/umalloc.d -MT user/umalloc.d -MT user/umalloc.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/printf.c -MF user/printf.d -MT user/printf.d -MT user/printf.o -g
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/usys.S -MF user/usys.d -MT user/usys.d -MT user/usys.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ulib.c -MF user/ulib.d -MT user/ulib.d -MT user/ulib.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/zombie.c -MF user/zombie.d -MT user/zombie.d -MT user/zombie.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/wc.c -MF user/wc.d -MT user/wc.d -MT user/wc.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/usertests.c -MF user/usertests.d -MT user/usertests.d -MT user/usertests.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/stressfs.c -MF user/stressfs.d -MT user/stressfs.d -MT user/stressfs.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/stack2.c -MF user/stack2.d -MT user/stack2.d -MT user/stack2.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/spin.c -MF user/spin.d -MT user/spin.d -MT user/spin.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/sh.c -MF user/sh.d -MT user/sh.d -MT user/sh.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/rm.c -MF user/rm.d -MT user/rm.d -MT user/rm.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/p3.c -MF user/p3.d -MT user/p3.d -MT user/p3.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ovf.c -MF user/ovf.d -MT user/ovf.d -MT user/ovf.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/null.c -MF user/null.d -MT user/null.d -MT user/null.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/mkdir.c -MF user/mkdir.d -MT user/mkdir.d -MT user/mkdir.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ls.c -MF user/ls.d -MT user/ls.d -MT user/ls.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/ln.c -MF user/ln.d -MT user/ln.d -MT user/ln.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/kill.c -MF user/kill.d -MT user/kill.d -MT user/kill.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/init.c -MF user/init.d -MT user/init.d -MT user/init.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/heap.c -MF user/heap.d -MT user/heap.d -MT user/heap.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/grep.c -MF user/grep.d -MT user/grep.d -MT user/grep.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/forktest.c -MF user/forktest.d -MT user/forktest.d -MT user/forktest.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/echo.c -MF user/echo.d -MT user/echo.d -MT user/echo.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/cat.c -MF user/cat.d -MT user/cat.d -MT user/cat.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/initcode.S -MF kernel/initcode.d -MT kernel/initcode.d -MT kernel/initcode.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bootother.S -MF kernel/bootother.d -MT kernel/bootother.d -MT kernel/bootother.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/data.S -MF kernel/data.d -MT kernel/data.d -MT kernel/data.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/multiboot.S -MF kernel/multiboot.d -MT kernel/multiboot.d -MT kernel/multiboot.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bootasm.S -MF kernel/bootasm.d -MT kernel/bootasm.d -MT kernel/bootasm.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bootmain.c -MF kernel/bootmain.d -MT kernel/bootmain.d -MT kernel/bootmain.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/vm.c -MF kernel/vm.d -MT kernel/vm.d -MT kernel/vm.o
perl kernel/vectors.pl > kernel/vectors.S
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/vectors.S -MF kernel/vectors.d -MT kernel/vectors.d -MT kernel/vectors.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/uart.c -MF kernel/uart.d -MT kernel/uart.d -MT kernel/uart.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/trap.c -MF kernel/trap.d -MT kernel/trap.d -MT kernel/trap.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/trapasm.S -MF kernel/trapasm.d -MT kernel/trapasm.d -MT kernel/trapasm.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/timer.c -MF kernel/timer.d -MT kernel/timer.d -MT kernel/timer.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/sysproc.c -MF kernel/sysproc.d -MT kernel/sysproc.d -MT kernel/sysproc.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/sysfile.c -MF kernel/sysfile.d -MT kernel/sysfile.d -MT kernel/sysfile.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/syscall.c -MF kernel/syscall.d -MT kernel/syscall.d -MT kernel/syscall.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/swtch.S -MF kernel/swtch.d -MT kernel/swtch.d -MT kernel/swtch.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/string.c -MF kernel/string.d -MT kernel/string.d -MT kernel/string.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/spinlock.c -MF kernel/spinlock.d -MT kernel/spinlock.d -MT kernel/spinlock.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/proc.c -MF kernel/proc.d -MT kernel/proc.d -MT kernel/proc.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/pipe.c -MF kernel/pipe.d -MT kernel/pipe.d -MT kernel/pipe.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/picirq.c -MF kernel/picirq.d -MT kernel/picirq.d -MT kernel/picirq.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/mp.c -MF kernel/mp.d -MT kernel/mp.d -MT kernel/mp.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/main.c -MF kernel/main.d -MT kernel/main.d -MT kernel/main.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/lapic.c -MF kernel/lapic.d -MT kernel/lapic.d -MT kernel/lapic.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/kbd.c -MF kernel/kbd.d -MT kernel/kbd.d -MT kernel/kbd.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/kalloc.c -MF kernel/kalloc.d -MT kernel/kalloc.d -MT kernel/kalloc.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/ioapic.c -MF kernel/ioapic.d -MT kernel/ioapic.d -MT kernel/ioapic.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/ide.c -MF kernel/ide.d -MT kernel/ide.d -MT kernel/ide.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/fs.c -MF kernel/fs.d -MT kernel/fs.d -MT kernel/fs.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/file.c -MF kernel/file.d -MT kernel/file.d -MT kernel/file.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/exec.c -MF kernel/exec.d -MT kernel/exec.d -MT kernel/exec.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/console.c -MF kernel/console.d -MT kernel/console.d -MT kernel/console.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG kernel/bio.c -MF kernel/bio.d -MT kernel/bio.d -MT kernel/bio.o
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/bootasm.S -o kernel/bootasm.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	 -Os -c -o kernel/bootmain.o kernel/bootmain.c
ld  -m    elf_i386 -nostdlib --omagic \
	--entry=start --section-start=.text=0x7C00 \
	--output=kernel/bootblock.out kernel/bootasm.o kernel/bootmain.o
objcopy -S -O binary -j .text kernel/bootblock.out kernel/bootblock
./kernel/sign.pl kernel/bootblock
boot block is 431 bytes (max 510)
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/bio.o kernel/bio.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/console.o kernel/console.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/exec.o kernel/exec.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/file.o kernel/file.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/fs.o kernel/fs.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/ide.o kernel/ide.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/ioapic.o kernel/ioapic.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/kalloc.o kernel/kalloc.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/kbd.o kernel/kbd.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/lapic.o kernel/lapic.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/main.o kernel/main.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/mp.o kernel/mp.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/picirq.o kernel/picirq.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/pipe.o kernel/pipe.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/proc.o kernel/proc.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/spinlock.o kernel/spinlock.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/string.o kernel/string.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/swtch.S -o kernel/swtch.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/syscall.o kernel/syscall.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/sysfile.o kernel/sysfile.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/sysproc.o kernel/sysproc.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/timer.o kernel/timer.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/trapasm.S -o kernel/trapasm.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/trap.o kernel/trap.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/uart.o kernel/uart.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/vectors.S -o kernel/vectors.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/vm.o kernel/vm.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/multiboot.S -o kernel/multiboot.o
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/data.S -o kernel/data.o
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/bootother.S -o kernel/bootother.o
ld  -m    elf_i386 -nostdlib --omagic \
	--entry=start --section-start=.text=0x7000 \
	--output=kernel/bootother.out kernel/bootother.o
objcopy -S -O binary kernel/bootother.out bootother
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/initcode.S -o kernel/initcode.o
ld  -m    elf_i386 -nostdlib --omagic \
	--entry=start --section-start=.text=0x4000 \
	--output=kernel/initcode.out kernel/initcode.o
objcopy -S -O binary kernel/initcode.out initcode
ld  -m    elf_i386 -nostdlib --omagic \
	--section-start=.text=0x100000 --entry=main --output=kernel/kernel \
	kernel/multiboot.o kernel/data.o kernel/bio.o kernel/console.o kernel/exec.o kernel/file.o kernel/fs.o kernel/ide.o kernel/ioapic.o kernel/kalloc.o kernel/kbd.o kernel/lapic.o kernel/main.o kernel/mp.o kernel/picirq.o kernel/pipe.o kernel/proc.o kernel/spinlock.o kernel/string.o kernel/swtch.o kernel/syscall.o kernel/sysfile.o kernel/sysproc.o kernel/timer.o kernel/trapasm.o kernel/trap.o kernel/uart.o kernel/vectors.o kernel/vm.o \
	-b binary initcode bootother
dd if=/dev/zero of=xv6.img count=10000
10000+0 records in
10000+0 records out
5120000 bytes (5.1 MB, 4.9 MiB) copied, 0.0153148 s, 334 MB/s
dd if=kernel/bootblock of=xv6.img conv=notrunc
1+0 records in
1+0 records out
512 bytes copied, 3.1793e-05 s, 16.1 MB/s
dd if=kernel/kernel of=xv6.img seek=1 conv=notrunc
265+1 records in
265+1 records out
136000 bytes (136 kB, 133 KiB) copied, 0.000331777 s, 410 MB/s
gcc -c  -iquote include -Wall -Werror -ggdb  -o tools/mkfs.o tools/mkfs.c
gcc  tools/mkfs.o -o tools/mkfs
mkdir -p fs
cp README fs/README
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/cat.o user/cat.c -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/ulib.o user/ulib.c -g
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c user/usys.S -o user/usys.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/printf.o user/printf.c -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/umalloc.o user/umalloc.c -g
mkdir -p user/bin
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/cat user/cat.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/cat fs/cat
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/echo.o user/echo.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/echo user/echo.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/echo fs/echo
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/forktest.o user/forktest.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/forktest user/forktest.o user/ulib.o user/usys.o
cp user/bin/forktest fs/forktest
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/grep.o user/grep.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/grep user/grep.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/grep fs/grep
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/heap.o user/heap.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/heap user/heap.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/heap fs/heap
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/init.o user/init.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/init user/init.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/init fs/init
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/kill.o user/kill.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/kill user/kill.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/kill fs/kill
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/ln.o user/ln.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/ln user/ln.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/ln fs/ln
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/ls.o user/ls.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/ls user/ls.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/ls fs/ls
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/mkdir.o user/mkdir.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/mkdir user/mkdir.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/mkdir fs/mkdir
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/null.o user/null.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/null user/null.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/null fs/null
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/ovf.o user/ovf.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/ovf user/ovf.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/ovf fs/ovf
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/p3.o user/p3.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/p3 user/p3.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/p3 fs/p3
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/rm.o user/rm.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/rm user/rm.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/rm fs/rm
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/sh.o user/sh.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/sh user/sh.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/sh fs/sh
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/spin.o user/spin.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/spin user/spin.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/spin fs/spin
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/stack2.o user/stack2.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/stack2 user/stack2.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/stack2 fs/stack2
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/stressfs.o user/stressfs.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/stressfs user/stressfs.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/stressfs fs/stressfs
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/usertests.o user/usertests.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/usertests user/usertests.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/usertests fs/usertests
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/wc.o user/wc.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/wc user/wc.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/wc fs/wc
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/zombie.o user/zombie.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/zombie user/zombie.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/zombie fs/zombie
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 529 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/ls user/bin/stressfs user/bin/p3 user/bin/grep user/bin/sh user/bin/tester user/bin/kill user/bin/cat user/bin/rm user/bin/mkdir user/bin/heap user/bin/echo user/bin/ln user/bin/null user/bin/spin user/bin/usertests user/bin/stack2 user/bin/wc user/bin/ovf user/bin/init user/bin/zombie


test build PASSED
 (build xv6 using make)

starting null

**********************************************************************

Test null
null pointer dereference should kill process

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/null.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
null dereference: TEST PASSED

test null PASSED (10 of 10)
 (null pointer dereference should kill process)

starting null2

**********************************************************************

Test null2
any dereference from first two pages should fault

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/null2.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
bad dereference (0x1001): TEST PASSED


test null2 PASSED (10 of 10)
 (any dereference from first two pages should fault)

starting null3

**********************************************************************

Test null3
any dereference from first two pages should fault

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/null3.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
bad dereference (0x2001): TEST PASSED


test null3 PASSED (5 of 5)
 (any dereference from first two pages should fault)

starting null4

**********************************************************************

Test null4
any dereference from first two pages should fault

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/null4.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
bad dereference (0x3001): TEST PASSED


test null4 PASSED (5 of 5)
 (any dereference from first two pages should fault)

starting bounds

**********************************************************************

Test bounds
syscall argument checks (null page, code/heap boundaries)

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/bounds.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 532 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester


test bounds FAILED (0 of 10)
 (syscall argument checks (null page, code/heap boundaries))
 Timelimit (5.0s) exceeded

starting stack

**********************************************************************

Test stack
stack should be at high end of address space

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/stack.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 532 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test stack PASSED (10 of 10)
 (stack should be at high end of address space)

starting bounds2

**********************************************************************

Test bounds2
syscall argument checks (stack boundaries)

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/bounds2.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 531 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test bounds2 PASSED (5 of 5)
 (syscall argument checks (stack boundaries))

starting bounds_str

**********************************************************************

Test bounds_str
syscall argument checks (string arg)

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/bounds_str.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 534 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester


test bounds_str FAILED (0 of 10)
 (syscall argument checks (string arg))
 Timelimit (5.0s) exceeded

starting heap

**********************************************************************

Test heap
heap can grow to 5 pages below stack, but not more

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/heap.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 533 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
heap: memory not enough
TEST PASSED

test heap PASSED (10 of 10)
 (heap can grow to 5 pages below stack, but not more)

starting stack2

**********************************************************************

Test stack2
stack should grow automatically on a page fault, until 5 pages above heap

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/stack2.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 529 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
stack: heap: 20480, stack: 651264
stack: heap: 20480, stack: 647168
stack: heap: 20480, stack: 643072
stack: heap: 20480, stack: 638976
stack: heap: 20480, stack: 634880
stack: heap: 20480, stack: 630784
stack: heap: 20480, stack: 626688
stack: heap: 20480, stack: 622592
stack: heap: 20480, stack: 618496
stack: heap: 20480, stack: 614400
stack: heap: 20480, stack: 610304
stack: heap: 20480, stack: 606208
stack: heap: 20480, stack: 602112
stack: heap: 20480, stack: 598016
stack: heap: 20480, stack: 593920
stack: heap: 20480, stack: 589824
stack: heap: 20480, stack: 585728
stack: heap: 20480, stack: 581632
stack: heap: 20480, stack: 577536
stack: heap: 20480, stack: 573440
stack: heap: 20480, stack: 569344
stack: heap: 20480, stack: 565248
stack: heap: 20480, stack: 561152
stack: heap: 20480, stack: 557056
stack: heap: 20480, stack: 552960
stack: heap: 20480, stack: 548864
stack: heap: 20480, stack: 544768
stack: heap: 20480, stack: 540672
stack: heap: 20480, stack: 536576
stack: heap: 20480, stack: 532480
stack: heap: 20480, stack: 528384
stack: heap: 20480, stack: 524288
stack: heap: 20480, stack: 520192
stack: heap: 20480, stack: 516096
stack: heap: 20480, stack: 512000
stack: heap: 20480, stack: 507904
stack: heap: 20480, stack: 503808
stack: heap: 20480, stack: 499712
stack: heap: 20480, stack: 495616
stack: heap: 20480, stack: 491520
stack: heap: 20480, stack: 487424
stack: heap: 20480, stack: 483328
stack: heap: 20480, stack: 479232
stack: heap: 20480, stack: 475136
stack: heap: 20480, stack: 471040
stack: heap: 20480, stack: 466944
stack: heap: 20480, stack: 462848
stack: heap: 20480, stack: 458752
stack: heap: 20480, stack: 454656
stack: heap: 20480, stack: 450560
stack: heap: 20480, stack: 446464
stack: heap: 20480, stack: 442368
stack: heap: 20480, stack: 438272
stack: heap: 20480, stack: 434176
stack: heap: 20480, stack: 430080
stack: heap: 20480, stack: 425984
stack: heap: 20480, stack: 421888
stack: heap: 20480, stack: 417792
stack: heap: 20480, stack: 413696
stack: heap: 20480, stack: 409600
stack: heap: 20480, stack: 405504
stack: heap: 20480, stack: 401408
stack: heap: 20480, stack: 397312
stack: heap: 20480, stack: 393216
stack: heap: 20480, stack: 389120
stack: heap: 20480, stack: 385024
stack: heap: 20480, stack: 380928
stack: heap: 20480, stack: 376832
stack: heap: 20480, stack: 372736
stack: heap: 20480, stack: 368640
stack: heap: 20480, stack: 364544
stack: heap: 20480, stack: 360448
stack: heap: 20480, stack: 356352
stack: heap: 20480, stack: 352256
stack: heap: 20480, stack: 348160
stack: heap: 20480, stack: 344064
stack: heap: 20480, stack: 339968
stack: heap: 20480, stack: 335872
stack: heap: 20480, stack: 331776
stack: heap: 20480, stack: 327680
stack: heap: 20480, stack: 323584
stack: heap: 20480, stack: 319488
stack: heap: 20480, stack: 315392
stack: heap: 20480, stack: 311296
stack: heap: 20480, stack: 307200
stack: heap: 20480, stack: 303104
stack: heap: 20480, stack: 299008
stack: heap: 20480, stack: 294912
stack: heap: 20480, stack: 290816
stack: heap: 20480, stack: 286720
stack: heap: 20480, stack: 282624
stack: heap: 20480, stack: 278528
stack: heap: 20480, stack: 274432
stack: heap: 20480, stack: 270336
stack: heap: 20480, stack: 266240
stack: heap: 20480, stack: 262144
stack: heap: 20480, stack: 258048
stack: heap: 20480, stack: 253952
stack: heap: 20480, stack: 249856
stack: heap: 20480, stack: 245760
stack: heap: 20480, stack: 241664
stack: heap: 20480, stack: 237568
stack: heap: 20480, stack: 233472
stack: heap: 20480, stack: 229376
stack: heap: 20480, stack: 225280
stack: heap: 20480, stack: 221184
stack: heap: 20480, stack: 217088
stack: heap: 20480, stack: 212992
stack: heap: 20480, stack: 208896
stack: heap: 20480, stack: 204800
stack: heap: 20480, stack: 200704
stack: heap: 20480, stack: 196608
stack: heap: 20480, stack: 192512
stack: heap: 20480, stack: 188416
stack: heap: 20480, stack: 184320
stack: heap: 20480, stack: 180224
stack: heap: 20480, stack: 176128
stack: heap: 20480, stack: 172032
stack: heap: 20480, stack: 167936
stack: heap: 20480, stack: 163840
stack: heap: 20480, stack: 159744
stack: heap: 20480, stack: 155648
stack: heap: 20480, stack: 151552
stack: heap: 20480, stack: 147456
stack: heap: 20480, stack: 143360
stack: heap: 20480, stack: 139264
stack: heap: 20480, stack: 135168
stack: heap: 20480, stack: 131072
stack: heap: 20480, stack: 126976
stack: heap: 20480, stack: 122880
stack: heap: 20480, stack: 118784
stack: heap: 20480, stack: 114688
stack: heap: 20480, stack: 110592
stack: heap: 20480, stack: 106496
stack: heap: 20480, stack: 102400
stack: heap: 20480, stack: 98304
stack: heap: 20480, stack: 94208
stack: heap: 20480, stack: 90112
stack: heap: 20480, stack: 86016
stack: heap: 20480, stack: 81920
stack: heap: 20480, stack: 77824
stack: heap: 20480, stack: 73728
stack: heap: 20480, stack: 69632
stack: heap: 20480, stack: 65536
stack: heap: 20480, stack: 61440
stack: heap: 20480, stack: 57344
stack: heap: 20480, stack: 53248
stack: heap: 20480, stack: 49152
stack: heap: 20480, stack: 45056
TEST PASSED


test stack2 PASSED (5 of 5)
 (stack should grow automatically on a page fault, until 5 pages above heap)

starting bounds3

**********************************************************************

Test bounds3
syscall argument checks (dynamic stack boundaries)

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/bounds3.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 534 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
stack: heap: 24576, stack: 651264
stack: heap: 24576, stack: 647168
TEST PASSED


test bounds3 PASSED (3 of 3)
 (syscall argument checks (dynamic stack boundaries))

starting stack3

**********************************************************************

Test stack3
stack should only grow one page at a time

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/stack3.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 529 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
stack: heap: 20480, stack: 651264
TEST PASSED


test stack3 PASSED (2 of 2)
 (stack should only grow one page at a time)

starting stack4

**********************************************************************

Test stack4
stack should not grow into 5 pages above heap (program must terminate)

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/stack4.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
stack: heap: 20480, stack: 651264
stack: heap: 20480, stack: 647168
stack: heap: 20480, stack: 643072
stack: heap: 20480, stack: 638976
stack: heap: 20480, stack: 634880
stack: heap: 20480, stack: 630784
stack: heap: 20480, stack: 626688
stack: heap: 20480, stack: 622592
stack: heap: 20480, stack: 618496
stack: heap: 20480, stack: 614400
stack: heap: 20480, stack: 610304
stack: heap: 20480, stack: 606208
stack: heap: 20480, stack: 602112
stack: heap: 20480, stack: 598016
stack: heap: 20480, stack: 593920
stack: heap: 20480, stack: 589824
stack: heap: 20480, stack: 585728
stack: heap: 20480, stack: 581632
stack: heap: 20480, stack: 577536
stack: heap: 20480, stack: 573440
stack: heap: 20480, stack: 569344
stack: heap: 20480, stack: 565248
stack: heap: 20480, stack: 561152
stack: heap: 20480, stack: 557056
stack: heap: 20480, stack: 552960
stack: heap: 20480, stack: 548864
stack: heap: 20480, stack: 544768
stack: heap: 20480, stack: 540672
stack: heap: 20480, stack: 536576
stack: heap: 20480, stack: 532480
stack: heap: 20480, stack: 528384
stack: heap: 20480, stack: 524288
stack: heap: 20480, stack: 520192
stack: heap: 20480, stack: 516096
stack: heap: 20480, stack: 512000
stack: heap: 20480, stack: 507904
stack: heap: 20480, stack: 503808
stack: heap: 20480, stack: 499712
stack: heap: 20480, stack: 495616
stack: heap: 20480, stack: 491520
stack: heap: 20480, stack: 487424
stack: heap: 20480, stack: 483328
stack: heap: 20480, stack: 479232
stack: heap: 20480, stack: 475136
stack: heap: 20480, stack: 471040
stack: heap: 20480, stack: 466944
stack: heap: 20480, stack: 462848
stack: heap: 20480, stack: 458752
stack: heap: 20480, stack: 454656
stack: heap: 20480, stack: 450560
stack: heap: 20480, stack: 446464
stack: heap: 20480, stack: 442368
stack: heap: 20480, stack: 438272
stack: heap: 20480, stack: 434176
stack: heap: 20480, stack: 430080
stack: heap: 20480, stack: 425984
stack: heap: 20480, stack: 421888
stack: heap: 20480, stack: 417792
stack: heap: 20480, stack: 413696
stack: heap: 20480, stack: 409600
stack: heap: 20480, stack: 405504
stack: heap: 20480, stack: 401408
stack: heap: 20480, stack: 397312
stack: heap: 20480, stack: 393216
stack: heap: 20480, stack: 389120
stack: heap: 20480, stack: 385024
stack: heap: 20480, stack: 380928
stack: heap: 20480, stack: 376832
stack: heap: 20480, stack: 372736
stack: heap: 20480, stack: 368640
stack: heap: 20480, stack: 364544
stack: heap: 20480, stack: 360448
stack: heap: 20480, stack: 356352
stack: heap: 20480, stack: 352256
stack: heap: 20480, stack: 348160
stack: heap: 20480, stack: 344064
stack: heap: 20480, stack: 339968
stack: heap: 20480, stack: 335872
stack: heap: 20480, stack: 331776
stack: heap: 20480, stack: 327680
stack: heap: 20480, stack: 323584
stack: heap: 20480, stack: 319488
stack: heap: 20480, stack: 315392
stack: heap: 20480, stack: 311296
stack: heap: 20480, stack: 307200
stack: heap: 20480, stack: 303104
stack: heap: 20480, stack: 299008
stack: heap: 20480, stack: 294912
stack: heap: 20480, stack: 290816
stack: heap: 20480, stack: 286720
stack: heap: 20480, stack: 282624
stack: heap: 20480, stack: 278528
stack: heap: 20480, stack: 274432
stack: heap: 20480, stack: 270336
stack: heap: 20480, stack: 266240
stack: heap: 20480, stack: 262144
stack: heap: 20480, stack: 258048
stack: heap: 20480, stack: 253952
stack: heap: 20480, stack: 249856
stack: heap: 20480, stack: 245760
stack: heap: 20480, stack: 241664
stack: heap: 20480, stack: 237568
stack: heap: 20480, stack: 233472
stack: heap: 20480, stack: 229376
stack: heap: 20480, stack: 225280
stack: heap: 20480, stack: 221184
stack: heap: 20480, stack: 217088
stack: heap: 20480, stack: 212992
stack: heap: 20480, stack: 208896
stack: heap: 20480, stack: 204800
stack: heap: 20480, stack: 200704
stack: heap: 20480, stack: 196608
stack: heap: 20480, stack: 192512
stack: heap: 20480, stack: 188416
stack: heap: 20480, stack: 184320
stack: heap: 20480, stack: 180224
stack: heap: 20480, stack: 176128
stack: heap: 20480, stack: 172032
stack: heap: 20480, stack: 167936
stack: heap: 20480, stack: 163840
stack: heap: 20480, stack: 159744
stack: heap: 20480, stack: 155648
stack: heap: 20480, stack: 151552
stack: heap: 20480, stack: 147456
stack: heap: 20480, stack: 143360
stack: heap: 20480, stack: 139264
stack: heap: 20480, stack: 135168
stack: heap: 20480, stack: 131072
stack: heap: 20480, stack: 126976
stack: heap: 20480, stack: 122880
stack: heap: 20480, stack: 118784
stack: heap: 20480, stack: 114688
stack: heap: 20480, stack: 110592
stack: heap: 20480, stack: 106496
stack: heap: 20480, stack: 102400
stack: heap: 20480, stack: 98304
stack: heap: 20480, stack: 94208
stack: heap: 20480, stack: 90112
stack: heap: 20480, stack: 86016
stack: heap: 20480, stack: 81920
stack: heap: 20480, stack: 77824
stack: heap: 20480, stack: 73728
stack: heap: 20480, stack: 69632
stack: heap: 20480, stack: 65536
stack: heap: 20480, stack: 61440
stack: heap: 20480, stack: 57344
stack: heap: 20480, stack: 53248
stack: heap: 20480, stack: 49152
stack: heap: 20480, stack: 45056
stack: heap: 20480, stack: 40960
stack: memory not enough
PF: no free page
TEST PASSED

test stack4 PASSED (5 of 5)
 (stack should not grow into 5 pages above heap (program must terminate))

starting stack5

**********************************************************************

Test stack5
stack and heap grow together, reserving 5 pages in between

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/stack5.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 531 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
stack: heap: 20480, stack: 651264
stack: heap: 20480, stack: 647168
heap: memory not enough
heap: memory not enough
stack: heap: 622592, stack: 643072
stack: memory not enough
PF: no free page
TEST PASSED


test stack5 PASSED (5 of 5)
 (stack and heap grow together, reserving 5 pages in between)

starting shmem_invalidpg

**********************************************************************

Test shmem_invalidpg
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_invalidpg.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test shmem_invalidpg PASSED (5 of 5)
 (nclude "types.h")

starting shmem_access_communication

**********************************************************************

Test shmem_access_communication
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_access_communication.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
i = 0x1000, 16785415
TEST FAILED


test shmem_access_communication FAILED (0 of 5)
 (nclude "types.h")
 tester failed

starting shmem_fork

**********************************************************************

Test shmem_fork
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_fork.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
i = 0x1000, 16781319
i = 0x1000, 0xfe2004
i = 0x2000, 16781319
TEST FAILED


test shmem_fork FAILED (0 of 5)
 (nclude "types.h")
 tester failed

starting shmem_access_exec2

**********************************************************************

Test shmem_access_exec2
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_access_exec2.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
i = 0x1000, 16777223
i = 0x1000, 0xfb1004
i = 0x2000, 16781319
i = 0x1000, 0xfb1004
i = 0x2000, 0xfb1008
i = 0x3000, 16785415
TEST PASSED

test shmem_access_exec2 PASSED (5 of 5)
 (nclude "types.h")

starting shmem_access_exec

**********************************************************************

Test shmem_access_exec
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_access_exec.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
i = 0x1000, 16777223
i = 0x1000, 0xfb1004
i = 0x2000, 16781319
i = 0x1000, 0xfb1004
i = 0x2000, 0xfb1008
i = 0x3000, 16785415
TEST PASSED


test shmem_access_exec PASSED (5 of 5)
 (nclude "types.h")

starting shmem_bound

**********************************************************************

Test shmem_bound
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_bound.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 532 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
i = 0x1000, 16777223
i = 0x1000, 0xfb1004
i = 0x2000, 16777223
user/tester.c: 40 assert failed (ptr1 == ptr2)
TEST FAILED


test shmem_bound FAILED (0 of 5)
 (nclude "types.h")
 tester failed

starting shmem_rw

**********************************************************************

Test shmem_rw
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_rw.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
i = 0x1000, 16777223
i = 0x1000, 0xfb1004
i = 0x2000, 16781319
i = 0x1000, 0xfb1004
i = 0x2000, 0xfb1008
i = 0x3000, 16785415
TEST PASSED


test shmem_rw PASSED (5 of 5)
 (nclude "types.h")

starting shmem_access_persistent

**********************************************************************

Test shmem_access_persistent
nclude "types.h"

**********************************************************************
Running xv6 user progam /u/c/s/cs537-1/tests/p3b/ctests/shmem_access_persistent.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o -g
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c -g
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x4000 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o -g
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
stack2
ln
usertests
kill
grep
mkdir
rm
zombie
cat
wc
ls
tester
spin
README
p3
forktest
sh
heap
echo
ovf
null
stressfs
init
balloc: first 530 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
/p/course/cs537-remzi/ta/tools/qemu -nographic -hdb fs.img xv6.img -smp 2
WARNING: Image format was not specified for 'fs.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
WARNING: Image format was not specified for 'xv6.img' and probing guessed raw.
         Automatically detecting the format is dangerous for raw images, write operations on block 0 will be restricted.
         Specify the 'raw' format explicitly to remove the restrictions.
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
i = 0x1000, 16785415
i = 0x1000, 16785415
TEST PASSED


test shmem_access_persistent PASSED (5 of 5)
 (nclude "types.h")

**********************************************************************
Summary:
test build PASSED
 (build xv6 using make)

test null PASSED (10 of 10)
 (null pointer dereference should kill process)

test null2 PASSED (10 of 10)
 (any dereference from first two pages should fault)

test null3 PASSED (5 of 5)
 (any dereference from first two pages should fault)

test null4 PASSED (5 of 5)
 (any dereference from first two pages should fault)

test bounds FAILED (0 of 10)
 (syscall argument checks (null page, code/heap boundaries))
 Timelimit (5.0s) exceeded

test stack PASSED (10 of 10)
 (stack should be at high end of address space)

test bounds2 PASSED (5 of 5)
 (syscall argument checks (stack boundaries))

test bounds_str FAILED (0 of 10)
 (syscall argument checks (string arg))
 Timelimit (5.0s) exceeded

test heap PASSED (10 of 10)
 (heap can grow to 5 pages below stack, but not more)

test stack2 PASSED (5 of 5)
 (stack should grow automatically on a page fault, until 5 pages above heap)

test bounds3 PASSED (3 of 3)
 (syscall argument checks (dynamic stack boundaries))

test stack3 PASSED (2 of 2)
 (stack should only grow one page at a time)

test stack4 PASSED (5 of 5)
 (stack should not grow into 5 pages above heap (program must terminate))

test stack5 PASSED (5 of 5)
 (stack and heap grow together, reserving 5 pages in between)

test shmem_invalidpg PASSED (5 of 5)
 (nclude "types.h")

test shmem_access_communication FAILED (0 of 5)
 (nclude "types.h")
 tester failed

test shmem_fork FAILED (0 of 5)
 (nclude "types.h")
 tester failed

test shmem_access_exec2 PASSED (5 of 5)
 (nclude "types.h")

test shmem_access_exec PASSED (5 of 5)
 (nclude "types.h")

test shmem_bound FAILED (0 of 5)
 (nclude "types.h")
 tester failed

test shmem_rw PASSED (5 of 5)
 (nclude "types.h")

test shmem_access_persistent PASSED (5 of 5)
 (nclude "types.h")

Passed 18 of 23 tests.
Overall 18 of 23
Points 100 of 135
